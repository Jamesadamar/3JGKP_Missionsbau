//**********************************************************************************
//** Scripted by DasMaeh, James		v1.0
//**********************************************************************************
//** Quelle(n):
//** https://community.bistudio.com/wiki/Description.ext
//**********************************************************************************

//**********************************************************************************
//** Einfügen von UserInterfaces/Dialoge von anderen Modulen/Scripts/etc
//**********************************************************************************
//#include "defines.hpp"

//**********************************************************************************
//** Missionsparamter
//**********************************************************************************


/**
Define whether you will see the time and date displayed while the mission loads. 1 means visible, 0 hidden. 
*/
onLoadMissionTime = 1;

/**
Define whether you will see the time and date displayed while the intro loads. 1 means visible, 0 hidden. 
*/
onLoadIntroTime = 0;

/**
You can define a picture to be shown while the mission is loaded.

The path is relative to the mission folder. 
*/
loadScreen = "";

//*********************************
//** Sets respawn type.
//*********************************
//** 0 or "NONE" - No respawn 
//** 1 or "BIRD" - Respawn as a seagull 
//** 2 or "INSTANT" - Respawn just where you died. 
//** 3 or "BASE" - Respawn in base.
//**		Requires a marker named: respawn_west, respawn_east, respawn_guerrila, respawn_civilian
//**		Add markers named with the prefix 'respawn_west' with any suffix (eg: respawn_west1,respawn_west_2) for multiple random respawn points.
//**		Vehicle respawn in base requires a marker named: respawn_vehicle_west, etc
//** 4 or "GROUP" - Respawn in your group (if there's no AI left, you'll become a seagull).
//** 5 or "SIDE" - Respawn into an AI unit on your side (if there's no AI left, you'll become a seagull).
//*********************************
respawn = 3;

respawnDelay = 10;							// Set respawn delay in seconds.
respawnVehicleDelay = 11;					// Set vehicle respawn delay in seconds.
respawnDialog = 1;							// Show the scoreboard and respawn countdown timer for a player if he is killed with respawnType 3. Default is 1 (true).
joinUnassigned = 1;							// New Player auto assigned to the side with least players

/**
respawnOnStart = 1;//Respawn on start. Run respawn script on start.
respawnOnStart = 0;//Dont respawn on start. Run respawn script on start.
respawnOnStart = -1;//Dont respawn on start. Don't run respawn script on start.
*/
respawnOnStart = 0;

/**
When 1, removes all playable units which do not have a human player. When 0, a logging out player will have AI take control of his character. Default value is 0. (MP) 
*/
disabledAI = 1;	

/**
Enables scorelist for AI players 
*/							
aiKills = 0;	

/**
Defines if the debriefing is shown or not at the end of the mission. 
*/
debriefing = 0;		

/**
As of Arma 3 v1.49.131879 showHUD param could be an array to allow control over separate HUD elements, for example: 
*/	
showHUD[] = {
	true,	// Scripted HUD (same as showHUD command)
	true,	// Vehicle + soldier info
	true,	// Vehicle radar
	true,	// Vehicle compass 
	true,	// Tank direction indicator
	true,	// Commanding menu
	false,	// Group Bar
	true	// HUD Weapon Cursors
};				

ShowGPS = 0;								// In ArmA 1.04 toggle this option to disable the mini map attached to the GPS. 
showCompass = 1;							// Defines if the compass is visible.
showMap = 1;								// Defines if the map is shown after the mission starts.
showNotePad = 0;							// Defines if the NotePad is shown after the mission starts.
showWatch = 1;								// Defines if the watch is visible.
scriptedPlayer = 0;							// When scripted player is enabled, game no longer shows "No player select" error message upon mission start when no player unit is present.

/**
Disable global, side, command and system chat. MOTD and admin say have exception and will show in global. Introduced in BETA 1.60.93398. 
0 = Global
1 = Side
2 = Command
3 = Group
4 = Vehicle
5 = Direct
6 = System
*/
disableChannels[]={0,2,6,5,6};

/**
Disable dropping items while swimming. Introduced in BETA 1.60.93965. 
*/
enableItemsDropping = 0;

/**
Allows access to the Debug Console outside of the editor during normal gameplay. 
0 = Default behavior, available only in editor
1 = Available in SP and for hosts / logged in admins
2 = Available for everyone
*/
enableDebugConsole = 1;

/**
Sets the mode for corpse removal manager. 
0 = None - None of the units are managed by the manager
1 = All - All units are managed by the manager
2 = None_But_Respawned - Only units that can respawn are managed by the manager
3 = All_But_Respawned - All units are managed by the manager with exception of respawned (opposite to mode 2)
Default value: 0 for SP, 2 for MP
*/
corpseManagerMode = 3;

/**
Corpse limit before which ( <= ) corpseRemovalMaxTime applies and after which ( > ) corpseRemovalMinTime applies (see below).
Default value: 15
*/
corpseLimit = 15;

/**
Remove all bodies that have been dead longer than corpseRemovalMinTime when corpseLimit is breached.
Default value: 10
*/
corpseRemovalMinTime = 120;

/**
Maximum time a corpse can remain on the ground if total number of corpses is equal or under corpseLimit.
Default value: 3600
*/
corpseRemovalMaxTime = 600;

/**
Sets the mode for wreck removal manager.

0 = None - None of the vehicles are managed by the manager
1 = All - All vehicles are managed by the manager
2 = None_But_Respawned - Only vehicles that can respawn are managed by the manager
3 = All_But_Respawned - All vehicles are managed by the manager with exception of respawned (opposite to mode 2)
Default value: 0 for SP, 2 for MP
*/
wreckManagerMode = 3;

/**
Vehicle wreck limit before which ( <= ) wreckRemovalMaxTime applies and after which ( > ) wreckRemovalMinTime applies (see below).

Default value: 15
*/
wreckLimit = 5;

/**
Remove all wrecks that have existed longer than wreckRemovalMinTime when wreckLimit is breached.

Default value: 10
*/
wreckRemovalMinTime = 60; //seconds

wreckRemovalMaxTime = 600;

/**
0: do not use new 2D markers (default), 1: replace task markers with new 2D markers
*/
taskManagement_markers2D = 1;
/**
0: do not use new 3D markers (default), 1: replace task waypoints with new 3D markers 
*/
taskManagement_markers3D = 1;
/**
0: do not propagate (default), 1: propagate shared tasks to subordinates 
*/
taskManagement_propagate = 1;

/**
When set to 1, changes default GPS mini map into a radar like display that indicates group members relative position to the player 
*/
showGroupIndicator = 0;

//**********************************************************************************
//** The purpose of the following class definition is to signal the engine the gameType
//** which is displayed in the MP game browser.
//** This can assist other players for finding particular missions using the filters.
//**********************************************************************************
//** gameType can be one of following:
//**		DM - Death Match 
//**		CTF - Capture the Flag 
//**		FF - Flag Fight 
//**		Coop -Cooperative Mission 
//**		Team - Team Mission 
//**		Scont - Sector Control 
//**		Hold - Hold Location 
//**		Unknown - Unknown - is used when no class header is defined.
//**********************************************************************************
//** playerCountMultipleOf: the game server would set the maximum amount of players based on bandwidth and eventually this parameter.
//** The default is 2, so it means the mission will try to balance the game to multiples of 2 (2 vs 2, 4 vs 4, etc.)
//** and you did not end up with a team mission with 5 maximum players(2 vs 3 is unfair?). Coop type missions use 1, Team type missions use 2 (default). 
//**********************************************************************************
class Header
{
	gameType = COOP; 			// game type
	minPlayers = 1; 			// min # of players the mission supports
	maxPlayers = 60; 			// max # of players the mission supports
	playerCountMultipleOf = 1;	// 1=all on one side (Coop), 2= TvT (balanced Teams)
};

class Params
{
	class SafetyDistance
	{
		title = "Sicherheitsabstand um Base"; // Param name visible in the list
		values[] = {0,500,1000}; // Values; must be integers; has to have the same number of elements as 'texts'
		texts[] = {"0 m (keinen)", "500 m", "1000 m"}; // Description of each selectable item
		default = 1000; // Default value; must be listed in 'values' array, otherwise 0 is used
	};

	class Daytime
	{
		title = "Uhrzeit";
		texts[] = {"Morning","Day","Evening","Night"};
		values[] = {6,12,18,0};
		default = 12;
		function = "BIS_fnc_paramDaytime"; // (Optional) Function called when player joins, selected value is passed as an argument
 		isGlobal = 1; // (Optional) 1 to execute script / function locally for every player who joins, 0 to do it only on server
	};

	class SquareSize 
	{
		title = "Größe der feindlichen Planquadrate";
		values[] = {50,100,150,200,250,500,1000};
		texts[] = {"50 m", "100 m", "150 m", "200 m", "250 m", "500 m", "1 km"};
		default = 100;
	};

	class CitySize 
	{
		title = "Kerngröße von Städten";
		values[] = {1,2,3,4,5};
		texts[] = {"1 Gebäude", "2 Gebäude", "3 Gebäude", "4 Gebäude", "5 Gebäude"};
		default = 3;
	};
	
};
